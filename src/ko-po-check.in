#! /usr/bin/env python

import sys,os,getopt

moduledir = "@prefix@/share/ko-po-check"
VERSION = "@VERSION@"

import codecs

# codec install check
try:
    codecs.lookup('euc-kr')
except LookupError:
    sys.stderr.write("한국어 codec이 설치되지 않았습니다.  http://koco.sourceforge.net\n")
    sys.exit(1)

def help():
    e = localeutil.eucstr
    helpmsg = [
        e("Usage: ko-po-check [옵션]... [파일]...<\n"),
        e("      --help                이 도움말을 보여주고 종료합니다\n"),
        e("      --version             버전 정보를 표시하고 종료합니다\n"),
        e("\n"),
        e(" 파일이 `-'이거나 파일이 주어지지 않은 경우 표준 입력에서 읽습니다.\n")]
    localeutil.outlines(helpmsg)
    sys.exit(1)

def version():
    versionmsg = [e("ko-po-check %s\n" % VERSION)]
    localeutil.outlines(versionmsg)
    sys.exit(0)
    

# processing the command line options

try:
    options, args = getopt.getopt(sys.argv[1:], "",
                                  ['help', 'version', 'moduledir='])
except getopt.GetoptError, msg:
    print "%s: %s" % (os.path.basename(sys.argv[0]), msg)
    sys.exit(1)

for (opt, val) in options:
    if opt == '--help':
        help()
    elif opt == '--version':
        version()
    elif opt == '--moduledir':
        moduledir = val
    
if not args:
    fn = '-'


filtersdir = moduledir + "/filters"
sys.path.append(moduledir)
import po,poparse,localeutil

localeutil.init()

import glob

filenames = glob.glob(filtersdir+"/*.py")
filters = {}
for filename in filenames:
    f = {}
    execfile(filename, f)
    filters[f['name']] = f

for fn in args:
    if fn == '-':
        fp = sys.stdin
    else:
        fp = open(fn)

    try:
        catalog = poparse.parse_file(fp)
    except poparse.ParseError, lineno:
        e = localeutil.eucstr
        localeutil.out(e("%s:%d: 파싱 오류\n"%(fn,lineno)))
        sys.exit(1)
    if fn != '-':
        fp.close()

    import string,re

    for entry in catalog.entries:
        if (not entry.is_translated()):
            continue
        for filtername in filters.keys():
            t,e = filters[filtername]['check'](entry.msgid, entry.msgstr)
            if not t:
                for line in string.split(e,'\n'):
                    localeutil.out("%s:%d: %s\n"%(fn,entry.msgstr_lineno,line))
